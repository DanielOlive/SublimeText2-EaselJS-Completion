{
	"scope": "easel-source.js - source",

	"completions":
	[
		{ "trigger": "Bitmap: initialize()", "contents": "initialize()"},
    { "trigger": "Bitmap: isVisible()", "contents": "isVisible()"},
    { "trigger": "Bitmap: draw()", "contents": "draw(${1:ctx <CanvasRenderingContext2D>},${2:ignoreCache <Boolean>})"},
    { "trigger": "Bitmap: cache()", "contents": "cache()"},
    { "trigger": "Bitmap: updateCache()", "contents": "updateCache()"},
    { "trigger": "Bitmap: uncache()", "contents": "uncache()"},
    { "trigger": "Bitmap: clone()", "contents": "clone()"},
    { "trigger": "Bitmap: toString()", "contents": "toString()"},

    { "trigger": "Bitmap: image<Image:null>", "contents": "image"},
    { "trigger": "Bitmap: snapToPixel<Boolean:true>", "contents": "snapToPixel"},
    { "trigger": "Bitmap: sourceRect<Rectangle:null>", "contents": "sourceRect"},
    { "trigger": "BitmapAnimation: initialize()", "contents": "initialize()"},
    { "trigger": "BitmapAnimation: isVisible()", "contents": "isVisible()"},
    { "trigger": "BitmapAnimation: draw()", "contents": "draw(${1:ctx <CanvasRenderingContext2D>},${2:ignoreCache <Boolean>})"},
    { "trigger": "BitmapAnimation: cache()", "contents": "cache()"},
    { "trigger": "BitmapAnimation: updateCache()", "contents": "updateCache()"},
    { "trigger": "BitmapAnimation: uncache()", "contents": "uncache()"},
    { "trigger": "BitmapAnimation: play()", "contents": "play()"},
    { "trigger": "BitmapAnimation: stop()", "contents": "stop()"},
    { "trigger": "BitmapAnimation: gotoAndPlay()", "contents": "gotoAndPlay(${1:frameOrAnimation <String|Number>})"},
    { "trigger": "BitmapAnimation: gotoAndStop()", "contents": "gotoAndStop(${1:frameOrAnimation <String|Number>})"},
    { "trigger": "BitmapAnimation: advance*/padvance()", "contents": "advance*/padvance()"},
    { "trigger": "BitmapAnimation: clone()", "contents": "clone()"},
    { "trigger": "BitmapAnimation: toString()", "contents": "toString()"},
    { "trigger": "BitmapAnimation: cloneProps()", "contents": "cloneProps(${1:o <Text>})"},

    { "trigger": "BitmapAnimation: onAnimationEnd<Function:null>", "contents": "onAnimationEnd"},
    { "trigger": "BitmapAnimation: currentFrame<Number:-1>", "contents": "currentFrame"},
    { "trigger": "BitmapAnimation: currentAnimation<String:null>", "contents": "currentAnimation"},
    { "trigger": "BitmapAnimation: paused<Boolean:true>", "contents": "paused"},
    { "trigger": "BitmapAnimation: spriteSheet<SpriteSheet:null>", "contents": "spriteSheet"},
    { "trigger": "BitmapAnimation: snapToPixel<Boolean:true>", "contents": "snapToPixel"},
    { "trigger": "BitmapAnimation: offset<Number:0>", "contents": "offset"},
    { "trigger": "BitmapAnimation: currentAnimationFrame<Number:0>", "contents": "currentAnimationFrame"},
    { "trigger": "Container: initialize()", "contents": "initialize()"},
    { "trigger": "Container: isVisible()", "contents": "isVisible()"},
    { "trigger": "Container: draw()", "contents": "draw(${1:ctx <CanvasRenderingContext2D>},${2:ignoreCache <Boolean>})"},
    { "trigger": "Container: addChild()", "contents": "addChild(${1:child <DisplayObject>})"},
    { "trigger": "Container: addChildAt()", "contents": "addChildAt(${1:child <DisplayObject>},${2:index <Number>})"},
    { "trigger": "Container: removeChild()", "contents": "removeChild(${1:child <DisplayObject>})"},
    { "trigger": "Container: removeAllChildren()", "contents": "removeAllChildren()"},
    { "trigger": "Container: getChildAt()", "contents": "getChildAt(${1:index <Number>})"},
    { "trigger": "Container: sortChildren()", "contents": "sortChildren(${1:sortFunction <Function>})"},
    { "trigger": "Container: getChildIndex()", "contents": "getChildIndex(${1:child <DisplayObject>})"},
    { "trigger": "Container: getNumChildren()", "contents": "getNumChildren()"},
    { "trigger": "Container: swapChildrenAt()", "contents": "swapChildrenAt()"},
    { "trigger": "Container: swapChildren()", "contents": "swapChildren()"},
    { "trigger": "Container: setChildIndex()", "contents": "setChildIndex()"},
    { "trigger": "Container: contains()", "contents": "contains(${1:child <DisplayObject>})"},
    { "trigger": "Container: hitTest()", "contents": "hitTest(${1:The x},${2:The y})"},
    { "trigger": "Container: getObjectsUnderPoint()", "contents": "getObjectsUnderPoint(${1:x <Number>},${2:y <Number>})"},
    { "trigger": "Container: getObjectUnderPoint()", "contents": "getObjectUnderPoint(${1:x <Number>},${2:y <Number>})"},
    { "trigger": "Container: toString()", "contents": "toString()"},

    { "trigger": "Container: children<Array[DisplayObject]:null>", "contents": "children"},
    { "trigger": "DisplayObject: initialize()", "contents": "initialize()"},
    { "trigger": "DisplayObject: isVisible()", "contents": "isVisible()"},
    { "trigger": "DisplayObject: draw()", "contents": "draw(${1:ctx <CanvasRenderingContext2D>},${2:ignoreCache <Boolean>})"},
    { "trigger": "DisplayObject: setupContext()", "contents": "setupContext(${1:ctx <CanvasRenderingContext2D>})"},
    { "trigger": "DisplayObject: cache()", "contents": "cache(${1:x <Number>},${2:y <Number>},${3:width <Number>},${4:height <Number>},${5:scale <Number>})"},
    { "trigger": "DisplayObject: updateCache()", "contents": "updateCache(${1:compositeOperation <String>})"},
    { "trigger": "DisplayObject: uncache()", "contents": "uncache()"},
    { "trigger": "DisplayObject: getCacheDataURL()", "contents": "getCacheDataURL()"},
    { "trigger": "DisplayObject: getStage()", "contents": "getStage()"},
    { "trigger": "DisplayObject: localToGlobal()", "contents": "localToGlobal(${1:x <Number>},${2:y <Number>})"},
    { "trigger": "DisplayObject: globalToLocal()", "contents": "globalToLocal(${1:x <Number>},${2:y <Number>})"},
    { "trigger": "DisplayObject: localToLocal()", "contents": "localToLocal(${1:x <Number>},${2:y <Number>},${3:target <DisplayObject>})"},
    { "trigger": "DisplayObject: setTransform()", "contents": "setTransform(${1:x <Number>},${2:y <Number>},${3:scaleX <Number>},${4:scaleY <Number>},${5:rotation <Number>},${6:skewX <Number>},${7:skewY <Number>},${8:regX <Number>},${9:regY <Number>})"},
    { "trigger": "DisplayObject: getMatrix()", "contents": "getMatrix(${1:matrix <Matrix2D>})"},
    { "trigger": "DisplayObject: getConcatenatedMatrix()", "contents": "getConcatenatedMatrix(${1:mtx <Matrix2D>})"},
    { "trigger": "DisplayObject: hitTest()", "contents": "hitTest(${1:x <Number>},${2:y <Number>})"},
    { "trigger": "DisplayObject: clone()", "contents": "clone()"},
    { "trigger": "DisplayObject: toString()", "contents": "toString()"},
    { "trigger": "DisplayObject: cloneProps()", "contents": "cloneProps(${1:o <DisplayObject>})"},

    { "trigger": "DisplayObject.suppressCrossDomainErrors<Boolean>", "contents": "DisplayObject.suppressCrossDomainErrors"},
    { "trigger": "DisplayObject: alpha<Number:1>", "contents": "alpha"},
    { "trigger": "DisplayObject: cacheCanvas<HTMLCanvasElement:null>", "contents": "cacheCanvas"},
    { "trigger": "DisplayObject: id<Number:-1>", "contents": "id"},
    { "trigger": "DisplayObject: mouseEnabled<Boolean:true>", "contents": "mouseEnabled"},
    { "trigger": "DisplayObject: name<String:null>", "contents": "name"},
    { "trigger": "DisplayObject: parent<DisplayObject:null>", "contents": "parent"},
    { "trigger": "DisplayObject: regX<Number:0>", "contents": "regX"},
    { "trigger": "DisplayObject: regY<Number:0>", "contents": "regY"},
    { "trigger": "DisplayObject: rotation<Number:0>", "contents": "rotation"},
    { "trigger": "DisplayObject: scaleX<Number:1>", "contents": "scaleX"},
    { "trigger": "DisplayObject: scaleY<Number:1>", "contents": "scaleY"},
    { "trigger": "DisplayObject: skewX<Number:0>", "contents": "skewX"},
    { "trigger": "DisplayObject: skewY<Number:0>", "contents": "skewY"},
    { "trigger": "DisplayObject: shadow<Shadow:null>", "contents": "shadow"},
    { "trigger": "DisplayObject: visible<Boolean:true>", "contents": "visible"},
    { "trigger": "DisplayObject: x<Number:0>", "contents": "x"},
    { "trigger": "DisplayObject: y<Number:0>", "contents": "y"},
    { "trigger": "DisplayObject: compositeOperation<String:null>", "contents": "compositeOperation"},
    { "trigger": "DisplayObject: snapToPixel<Boolean:false>", "contents": "snapToPixel"},
    { "trigger": "DisplayObject: filters<Array[Filter]:null>", "contents": "filters"},
    { "trigger": "DisplayObject: cacheID<Number:0>", "contents": "cacheID"},
    { "trigger": "DisplayObject: mask<Shape:null>", "contents": "mask"},
    { "trigger": "DisplayObject: hitArea<DisplayObject:null>", "contents": "hitArea"},
    { "trigger": "DOMElement: initialize()", "contents": "initialize()"},
    { "trigger": "DOMElement: isVisible()", "contents": "isVisible()"},
    { "trigger": "DOMElement: draw()", "contents": "draw(${1:ctx <CanvasRenderingContext2D>},${2:ignoreCache <Boolean>})"},
    { "trigger": "DOMElement: cache()", "contents": "cache()"},
    { "trigger": "DOMElement: uncache()", "contents": "uncache()"},
    { "trigger": "DOMElement: updateCache()", "contents": "updateCache()"},
    { "trigger": "DOMElement: updateCache()", "contents": "updateCache()"},
    { "trigger": "DOMElement: localToGlobal()", "contents": "localToGlobal()"},
    { "trigger": "DOMElement: globalToLocal()", "contents": "globalToLocal()"},
    { "trigger": "DOMElement: localToLocal()", "contents": "localToLocal()"},
    { "trigger": "DOMElement: clone()", "contents": "clone()"},
    { "trigger": "DOMElement: toString()", "contents": "toString()"},

    { "trigger": "DOMElement: htmlElement<HTMLElement:null>", "contents": "htmlElement"},
    { "trigger": "Graphics: getRGB()", "contents": "getRGB(${1:r <Number>},${2:g <Number>},${3:b <Number>},${4:alpha <Number>})"},
    { "trigger": "Graphics: getHSL()", "contents": "getHSL(${1:hue <Number>},${2:saturation <Number>},${3:lightness <Number>},${4:alpha <Number>})"},
    { "trigger": "Graphics: initialize()", "contents": "initialize(${1:instructions <String>})"},
    { "trigger": "Graphics: draw()", "contents": "draw(${1:ctx <CanvasRenderingContext2D>})"},
    { "trigger": "Graphics: drawAsPath()", "contents": "drawAsPath(${1:ctx <CanvasRenderingContext2D>})"},
    { "trigger": "Graphics: moveTo()", "contents": "moveTo(${1:x <Number>},${2:y <Number>})"},
    { "trigger": "Graphics: lineTo()", "contents": "lineTo(${1:x <Number>},${2:y <Number>})"},
    { "trigger": "Graphics: arcTo()", "contents": "arcTo(${1:x1 <Number>},${2:y1 <Number>},${3:x2 <Number>},${4:y2 <Number>},${5:radius <Number>})"},
    { "trigger": "Graphics: arc()", "contents": "arc(${1:x <Number>},${2:y <Number>},${3:radius <Number>},${4:startAngle <Number>},${5:endAngle <Number>},${6:anticlockwise <Boolean>})"},
    { "trigger": "Graphics: quadraticCurveTo()", "contents": "quadraticCurveTo(${1:cpx <Number>},${2:cpy <Number>},${3:x <Number>},${4:y <Number>})"},
    { "trigger": "Graphics: rect()", "contents": "rect(${1:x <Number>},${2:y <Number>},${3:w <Number>},${4:h <Number>})"},
    { "trigger": "Graphics: closePath()", "contents": "closePath()"},
    { "trigger": "Graphics: clear()", "contents": "clear()"},
    { "trigger": "Graphics: beginFill()", "contents": "beginFill(${1:color <String>})"},
    { "trigger": "Graphics: beginLinearGradientFill()", "contents": "beginLinearGradientFill(${1:colors <Array[String]>},${2:ratios <Array[Number]>},${3:x0 <Number>},${4:y0 <Number>},${5:x1 <Number>},${6:y1 <Number>})"},
    { "trigger": "Graphics: beginRadialGradientFill()", "contents": "beginRadialGradientFill(${1:colors <Array[String]>},${2:ratios <Array[Number]>},${3:x0 <Number>},${4:y0 <Number>},${5:r0 <Number>},${6:x1 <Number>},${7:y1 <Number>},${8:r1 <Number>})"},
    { "trigger": "Graphics: beginBitmapFill()", "contents": "beginBitmapFill(${1:The image},${2:repetition <String>})"},
    { "trigger": "Graphics: setStrokeStyle()", "contents": "setStrokeStyle(${1:The thickness},${2:Optional. caps},${3:Optional. joints},${4:Optional. miter})"},
    { "trigger": "Graphics: beginStroke()", "contents": "beginStroke(${1:A color})"},
    { "trigger": "Graphics: beginLinearGradientStroke()", "contents": "beginLinearGradientStroke(${1:An colors},${2:An ratios},${3:The x0},${4:The y0},${5:The x1},${6:The y1})"},
    { "trigger": "Graphics: beginRadialGradientStroke()", "contents": "beginRadialGradientStroke(${1:An colors},${2:An ratios},${3:Center x0},${4:Center y0},${5:Radius r0},${6:Center x1},${7:Center y1},${8:Radius r1})"},
    { "trigger": "Graphics: beginBitmapStroke()", "contents": "beginBitmapStroke(${1:| <Image},${2:repetition <String>})"},
    { "trigger": "Graphics: endStroke()", "contents": "endStroke()"},
    { "trigger": "Graphics: drawRoundRect()", "contents": "drawRoundRect(${1:x <Number>},${2:y <Number>},${3:w <Number>},${4:h <Number>},${5:radius <Number>})"},
    { "trigger": "Graphics: drawRoundRectComplex()", "contents": "drawRoundRectComplex(${1:x <Number>},${2:y <Number>},${3:w <Number>},${4:h <Number>},${5:radiusTL <Number>},${6:radiusTR <Number>},${7:radiusBR <Number>},${8:radiusBL <Number>})"},
    { "trigger": "Graphics: drawCircle()", "contents": "drawCircle(${1:x <Number>},${2:y <Number>},${3:radius <Number>})"},
    { "trigger": "Graphics: drawEllipse()", "contents": "drawEllipse(${1:x <Number>},${2:y <Number>},${3:w <Number>},${4:h <Number>})"},
    { "trigger": "Graphics: drawPolyStar()", "contents": "drawPolyStar(${1:x <Number>},${2:y <Number>},${3:radius <Number>},${4:sides <Number>},${5:pointSize <Number>},${6:angle <Number>})"},
    { "trigger": "Graphics: decodePath()", "contents": "decodePath(${1:str <String>})"},
    { "trigger": "Graphics: clone()", "contents": "clone()"},
    { "trigger": "Graphics: toString()", "contents": "toString()"},

    { "trigger": "Graphics.BASE_64<Object>", "contents": "Graphics.BASE_64"},
    { "trigger": "Graphics.STROKE_CAPS_MAP<Array[String]>", "contents": "Graphics.STROKE_CAPS_MAP"},
    { "trigger": "Graphics.STROKE_JOINTS_MAP<Array[String]>", "contents": "Graphics.STROKE_JOINTS_MAP"},
    { "trigger": "Graphics.beginCmd<Command>", "contents": "Graphics.beginCmd"},
    { "trigger": "Graphics.fillCmd<Command>", "contents": "Graphics.fillCmd"},
    { "trigger": "Graphics.strokeCmd<Command>", "contents": "Graphics.strokeCmd"},
    { "trigger": "Graphics: curveTo<Function:p.quadraticCurveTo>", "contents": "curveTo"},
    { "trigger": "Graphics: drawRect<Function:p.rect>", "contents": "drawRect"},
    { "trigger": "Graphics: mt<Function:p.moveTo>", "contents": "mt"},
    { "trigger": "Graphics: lt<Function:p.lineTo>", "contents": "lt"},
    { "trigger": "Graphics: at<Function:p.arcTo>", "contents": "at"},
    { "trigger": "Graphics: bt<Function:p.bezierCurveTo>", "contents": "bt"},
    { "trigger": "Graphics: qt<Function:p.quadraticCurveTo>", "contents": "qt"},
    { "trigger": "Graphics: a<Function:p.arc>", "contents": "a"},
    { "trigger": "Graphics: r<Function:p.rect>", "contents": "r"},
    { "trigger": "Graphics: cp<Function:p.closePath>", "contents": "cp"},
    { "trigger": "Graphics: c<Function:p.clear>", "contents": "c"},
    { "trigger": "Graphics: f<Function:p.beginFill>", "contents": "f"},
    { "trigger": "Graphics: lf<Function:p.beginLinearGradientFill>", "contents": "lf"},
    { "trigger": "Graphics: rf<Function:p.beginRadialGradientFill>", "contents": "rf"},
    { "trigger": "Graphics: bf<Function:p.beginBitmapFill>", "contents": "bf"},
    { "trigger": "Graphics: ef<Function:p.endFill>", "contents": "ef"},
    { "trigger": "Graphics: ss<Function:p.setStrokeStyle>", "contents": "ss"},
    { "trigger": "Graphics: s<Function:p.beginStroke>", "contents": "s"},
    { "trigger": "Graphics: ls<Function:p.beginLinearGradientStroke>", "contents": "ls"},
    { "trigger": "Graphics: rs<Function:p.beginRadialGradientStroke>", "contents": "rs"},
    { "trigger": "Graphics: bs<Function:p.beginBitmapStroke>", "contents": "bs"},
    { "trigger": "Graphics: es<Function:p.endStroke>", "contents": "es"},
    { "trigger": "Graphics: dr<Function:p.drawRect>", "contents": "dr"},
    { "trigger": "Graphics: rr<Function:p.drawRoundRect>", "contents": "rr"},
    { "trigger": "Graphics: rc<Function:p.drawRoundRectComplex>", "contents": "rc"},
    { "trigger": "Graphics: dc<Function:p.drawCircle>", "contents": "dc"},
    { "trigger": "Graphics: de<Function:p.drawEllipse>", "contents": "de"},
    { "trigger": "Graphics: dp<Function:p.drawPolyStar>", "contents": "dp"},
    { "trigger": "Graphics: p<Function:p.decodePath>", "contents": "p"},
    { "trigger": "MovieClip : initialize()", "contents": "initialize()"},
    { "trigger": "MovieClip : isVisible()", "contents": "isVisible()"},
    { "trigger": "MovieClip : draw()", "contents": "draw(${1:ctx <CanvasRenderingContext2D>},${2:ignoreCache <Boolean>})"},
    { "trigger": "MovieClip : play()", "contents": "play()"},
    { "trigger": "MovieClip : stop()", "contents": "stop()"},
    { "trigger": "MovieClip : gotoAndPlay()", "contents": "gotoAndPlay(${1: positionOrLabel})"},
    { "trigger": "MovieClip : gotoAndStop()", "contents": "gotoAndStop(${1: positionOrLabel})"},
    { "trigger": "MovieClip : clone()", "contents": "clone()"},
    { "trigger": "MovieClip : toString()", "contents": "toString()"},
    { "trigger": "MovieClip : priority()", "contents": "priority()"},
    { "trigger": "MovieClip : install()", "contents": "install()"},
    { "trigger": "MovieClip : init()", "contents": "init()"},
    { "trigger": "MovieClip : tween()", "contents": "tween()"},

    { "trigger": "MovieClip: INDEPENDENT<String:'independent'>", "contents": "INDEPENDENT"},
    { "trigger": "MovieClip: SINGLE_FRAME<String:'single'>", "contents": "SINGLE_FRAME"},
    { "trigger": "MovieClip: SYNCHED<String:'synched'>", "contents": "SYNCHED"},
    { "trigger": "MovieClip.mode<String>", "contents": "MovieClip .mode"},
    { "trigger": "MovieClip: startPosition<Number:0>", "contents": "startPosition"},
    { "trigger": "MovieClip: loop<Boolean:true>", "contents": "loop"},
    { "trigger": "MovieClip: timeline<Timeline:null>", "contents": "timeline"},
    { "trigger": "MovieClip: paused<Boolean:false>", "contents": "paused"},
    { "trigger": "MovieClip: actionsEnabled<Boolean:true>", "contents": "actionsEnabled"},
    { "trigger": "MovieClip: Container_draw<Function:p.draw>", "contents": "Container_draw"},
    { "trigger": "MovieClip: Container__tick<Function:p._tick>", "contents": "Container__tick"},
    { "trigger": "Shadow: initialize()", "contents": "initialize(${1:color <String>},${2:offsetX <Number>},${3:offsetY <Number>},${4:blur <Number>})"},
    { "trigger": "Shadow: toString()", "contents": "toString()"},
    { "trigger": "Shadow: clone()", "contents": "clone()"},

    { "trigger": "Shadow.identity<Shadow>", "contents": "Shadow.identity"},
    { "trigger": "Shape: initialize()", "contents": "initialize()"},
    { "trigger": "Shape: isVisible()", "contents": "isVisible()"},
    { "trigger": "Shape: draw()", "contents": "draw(${1:ctx <CanvasRenderingContext2D>},${2:ignoreCache <Boolean>})"},
    { "trigger": "Shape: clone()", "contents": "clone(${1:recursive <Boolean>})"},
    { "trigger": "Shape: toString()", "contents": "toString()"},

    { "trigger": "Shape: graphics<Graphics:null>", "contents": "graphics"},
    { "trigger": "SpriteSheet : initialize()", "contents": "initialize()"},
    { "trigger": "SpriteSheet : getAnimations()", "contents": "getAnimations()"},
    { "trigger": "SpriteSheet : getAnimation()", "contents": "getAnimation(${1:The name})"},
    { "trigger": "SpriteSheet : getFrame()", "contents": "getFrame(${1:frameIndex <Number>})"},
    { "trigger": "SpriteSheet : toString()", "contents": "toString()"},
    { "trigger": "SpriteSheet : clone()", "contents": "clone()"},

    { "trigger": "SpriteSheet: complete<Boolean:true>", "contents": "complete"},
    { "trigger": "Stage: initialize()", "contents": "initialize()"},
    { "trigger": "Stage: update()", "contents": "update()"},
    { "trigger": "Stage: clear()", "contents": "clear()"},
    { "trigger": "Stage: toDataURL()", "contents": "toDataURL(${1:backgroundColor <String>},${2:mimeType <String>})"},
    { "trigger": "Stage: enableMouseOver()", "contents": "enableMouseOver(${1:frequency <Number>})"},
    { "trigger": "Stage: toString()", "contents": "toString()"},

    { "trigger": "Stage: autoClear<Boolean:true>", "contents": "autoClear"},
    { "trigger": "Stage: canvas<HTMLCanvasElement:null>", "contents": "canvas"},
    { "trigger": "Stage: mouseX<Number:0>", "contents": "mouseX"},
    { "trigger": "Stage: mouseY<Number:0>", "contents": "mouseY"},
    { "trigger": "Stage: snapToPixelEnabled<Boolean:false>", "contents": "snapToPixelEnabled"},
    { "trigger": "Stage: mouseInBounds<Boolean:false>", "contents": "mouseInBounds"},
    { "trigger": "Stage: tickOnUpdate<Boolean:true>", "contents": "tickOnUpdate"},
    { "trigger": "Stage: tickOnUpdate<mouseMoveOutside:true>", "contents": "tickOnUpdate"},
    { "trigger": "Stage: tick<Function:p.update>", "contents": "tick"},
    { "trigger": "Text: initialize()", "contents": "initialize()"},
    { "trigger": "Text: isVisible()", "contents": "isVisible()"},
    { "trigger": "Text: draw()", "contents": "draw(${1:ctx <CanvasRenderingContext2D>},${2:ignoreCache <Boolean>})"},
    { "trigger": "Text: getMeasuredWidth()", "contents": "getMeasuredWidth()"},
    { "trigger": "Text: getMeasuredLineHeight()", "contents": "getMeasuredLineHeight()"},
    { "trigger": "Text: getMeasuredHeight()", "contents": "getMeasuredHeight()"},
    { "trigger": "Text: clone()", "contents": "clone()"},
    { "trigger": "Text: toString()", "contents": "toString()"},
    { "trigger": "Text: cloneProps()", "contents": "cloneProps(${1:o <Text>})"},

    { "trigger": "Text: text<String:''>", "contents": "text"},
    { "trigger": "Text: font<String:null>", "contents": "font"},
    { "trigger": "Text: color<String:'#000'>", "contents": "color"},
    { "trigger": "Text: textAlign<String:'left'>", "contents": "textAlign"},
    { "trigger": "Text: textBaseline<String:'top'>", "contents": "textBaseline"},
    { "trigger": "Text: maxWidth<Number:null>", "contents": "maxWidth"},
    { "trigger": "Text: outline<Boolean:false>", "contents": "outline"},
    { "trigger": "Text: lineHeight<Number:0>", "contents": "lineHeight"},
    { "trigger": "Text: lineWidth<Number:null>", "contents": "lineWidth"}
		
}
